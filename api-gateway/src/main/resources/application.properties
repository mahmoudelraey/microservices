server.port=8084
spring.application.name=api-gateway
eureka.client.register-with-eureka=true
eureka.client.serviceUrl.defaultZone=http://localhost:8081/eureka
#enable api gateway
spring.cloud.gateway.discovery.locator.enabled=true
## to make application name when called used as lower case
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
# to filter routes we can use the following, the following says that if path equal "/users/status/check" and method equal "GET" then route to this "users-service" to api otherwise stop the request
spring.cloud.gateway.routes[0].id=users-status-check
# lp mean load balancer
spring.cloud.gateway.routes[0].uri=lb://users-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/users-service/users/status/check
spring.cloud.gateway.routes[0].predicates[1]=Method=GET
# remove cookie from the request
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie

spring.cloud.gateway.routes[0].filters[1]=RewritePath=/users-service/(?<segment>.*),/$\{segment}

# the for Account service
spring.cloud.gateway.routes[1].id=account-status-check
# lp mean load balancer
spring.cloud.gateway.routes[1].uri=lb://account-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/account-service/account/status/check
spring.cloud.gateway.routes[1].predicates[1]=Method=GET
# remove cookie from the request
spring.cloud.gateway.routes[1].filters[0]=RemoveRequestHeader=Cookie

spring.cloud.gateway.routes[1].filters[1]=RewritePath=/account-service/(?<segment>.*),/$\{segment}